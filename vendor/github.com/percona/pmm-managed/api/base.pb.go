// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type BaseVersionRequest struct {
}

func (m *BaseVersionRequest) Reset()                    { *m = BaseVersionRequest{} }
func (m *BaseVersionRequest) String() string            { return proto.CompactTextString(m) }
func (*BaseVersionRequest) ProtoMessage()               {}
func (*BaseVersionRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type BaseVersionResponse struct {
	Version string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
}

func (m *BaseVersionResponse) Reset()                    { *m = BaseVersionResponse{} }
func (m *BaseVersionResponse) String() string            { return proto.CompactTextString(m) }
func (*BaseVersionResponse) ProtoMessage()               {}
func (*BaseVersionResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *BaseVersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterType((*BaseVersionRequest)(nil), "api.BaseVersionRequest")
	proto.RegisterType((*BaseVersionResponse)(nil), "api.BaseVersionResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Base service

type BaseClient interface {
	Version(ctx context.Context, in *BaseVersionRequest, opts ...grpc.CallOption) (*BaseVersionResponse, error)
}

type baseClient struct {
	cc *grpc.ClientConn
}

func NewBaseClient(cc *grpc.ClientConn) BaseClient {
	return &baseClient{cc}
}

func (c *baseClient) Version(ctx context.Context, in *BaseVersionRequest, opts ...grpc.CallOption) (*BaseVersionResponse, error) {
	out := new(BaseVersionResponse)
	err := grpc.Invoke(ctx, "/api.Base/Version", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Base service

type BaseServer interface {
	Version(context.Context, *BaseVersionRequest) (*BaseVersionResponse, error)
}

func RegisterBaseServer(s *grpc.Server, srv BaseServer) {
	s.RegisterService(&_Base_serviceDesc, srv)
}

func _Base_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BaseVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BaseServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Base/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BaseServer).Version(ctx, req.(*BaseVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Base_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Base",
	HandlerType: (*BaseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _Base_Version_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "base.proto",
}

func init() { proto.RegisterFile("base.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x4a, 0x2c, 0x4e,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x94, 0x92, 0x49, 0xcf, 0xcf,
	0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49, 0x2c, 0xc9,
	0xcc, 0xcf, 0x2b, 0x86, 0x28, 0x51, 0x12, 0xe1, 0x12, 0x72, 0x4a, 0x2c, 0x4e, 0x0d, 0x4b, 0x2d,
	0x2a, 0xce, 0xcc, 0xcf, 0x0b, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0xd2, 0xe7, 0x12, 0x46,
	0x11, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x92, 0xe0, 0x62, 0x2f, 0x83, 0x08, 0x49, 0x30,
	0x2a, 0x30, 0x6a, 0x70, 0x06, 0xc1, 0xb8, 0x46, 0x91, 0x5c, 0x2c, 0x20, 0x0d, 0x42, 0x81, 0x5c,
	0xec, 0x50, 0x4d, 0x42, 0xe2, 0x7a, 0x89, 0x05, 0x99, 0x7a, 0x98, 0x86, 0x4b, 0x49, 0x60, 0x4a,
	0x40, 0xcc, 0x57, 0x12, 0x6e, 0xba, 0xfc, 0x64, 0x32, 0x13, 0xaf, 0x10, 0xb7, 0x7e, 0x99, 0x81,
	0x3e, 0xd4, 0xe8, 0x24, 0x36, 0xb0, 0x43, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xf4,
	0xe0, 0x62, 0xd9, 0x00, 0x00, 0x00,
}
